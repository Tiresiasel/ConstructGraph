version: '3.8'

services:
  neo4j:
    image: neo4j:5.15-community
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-12345678}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
      - NEO4J_dbms_connector_http_listen__address=0.0.0.0:7474
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474/browser/"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - constructgraph-network

  qdrant:
    image: qdrant/qdrant:latest
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - constructgraph-network

  api:
    build: .
    image: constructgraph-api:dev
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-12345678}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION=${QDRANT_COLLECTION:-construct_definitions}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POLL_INTERVAL=${POLL_INTERVAL:-5}
    depends_on:
      neo4j:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    ports:
      - "5050:5050"
    volumes:
      - ./data/input:/app/data/input:ro  # 只读输入目录
      - hf_cache:/root/.cache/huggingface
    networks:
      - constructgraph-network
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  qdrant_data:
  hf_cache:

networks:
  constructgraph-network:
    driver: bridge


